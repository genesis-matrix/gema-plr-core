##
## Salt Master Aggregate Configuration
##



##_META:
##  Contents:
##    - fileserver_backend
##    - pillar_roots
##    - file_roots
##    - gitfs_remotes
##



# File Server Backend
fileserver_backend:
  - roots
  - git



# pillar_roots
## - A base environment is required to house the top.sls file
## - the environment precedence/workflow is as follows:
## lab -> dev -> stg -> uat -> prod
## - this supports maintaining multiple versions of the same config in the
## same cfg-store, safely, for testing, without impacting more
## promoted a/o stable versions used by downstream environments.
## - For example, a UAT state will never be pulled into production, but in
## order to maintain a UAT environment, based in production, with
## only intended alteration, all the production states are available
## unless overidden.
pillar_roots:
  base:
    - /vagrant/srv/pillar/base
    - /srv/pillar



# ext_pillar
ext_pillar_first: False
ext_pillar:
  - nodegroups:
      pillar_name: "nodegroups"
  - file_tree:
      root_dir: /vagrant/srv/pillar/base/assets/static
      follow_dir_links: True
      keep_newline: True
  #ref: https://github.com/saltstack/salt/issues/39501
  #- consul: consul-00-loopback root=salt/pillar/_shared/
  #- consul: consul-00-loopback root=salt/pillar/_nodegroup/%(nodegroup)s
  #- consul: consul-00-loopback root=salt/pillar/_hosts/%(minion_id)s
  - stack: /vagrant/srv/pillar/base/pillarstack.cfg
      # grains:custom:grain:
      #   value:
      #     - /path/to/stack1.cfg
      #     - /path/to/stack2.cfg
      # opts:custom:opt:
      #   value: /path/to/stack0.cfg



# file_roots
## - A base environment is required to house the top.sls file
## - the environment precedence/workflow is as follows:
## LAB -> DEV -> STG -> UAT -> prod 
## - this supports maintaining multiple versions of the same config in the
## same cfg-store, safely, for testing, without impacting more
## promoted a/o stable versions used by downstream environments.
## - For example, a UAT state will never be pulled into production, but in
## order to maintain a UAT environment, based in production, with
## only intended alteration, all the production states are available
## unless overidden.
file_roots:
  base:
    - /vagrant/srv/roots/base



# gitfs_remotes
## NOTES:
##  - https://docs.saltstack.com/en/latest/topics/tutorials/gitfs.html
##  - Per-remote configuration parameters are named like the global versions, with the gitfs_ removed from the beginning.
##  - salt-run fileserver.clear_cache backend=git
##  - salt-run fileserver.file_list saltenv=dev backend=git
##  - salt-run fileserver.update backend=roots,git
##  - salt.fileserver.gitfs.envs(ignore_cache=False) #Return a list of refs that can be used as environments
gitfs_remotes:
  #- https://github.com/saltstack-formulas/salt-formula:
  # - https://github.com/khaije1/salt-formula:
  #   - mountpoint: salt://formula/salt
  #   - root: salt
  # openstack/salt-formula-kubernetes
  - https://github.com/openstack/salt-formula-kubernetes
  # infratest components (included in salt since v2016.11)
  # - https://github.com/ssplatt/saltstack-infratest-module:
  #   - mountpoint: salt://_modules
  # Hubblestack components
  - https://github.com/hubblestack/hubble-salt



## EOF